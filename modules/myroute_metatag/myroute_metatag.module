<?php

use Drupal\Component\Utility\Html;
use Drupal\myroute_metatag\Entity\MyrouteMetatag;


/**
 * Implements hook_preprocess_html().
 * @param $variables
 */
function myroute_metatag_preprocess_html(&$variables) {
  $route_match = \Drupal::routeMatch();
  $route_name = $route_match->getRouteName();
  if ($route_name && $myroute_metatag_id = \Drupal::service('myroute_metatag.myroute_metatag_evaluator')
      ->evaluateByRouteName($route_name)
  ) {
    $myroute_metatag = MyrouteMetatag::load($myroute_metatag_id);
    $items = $myroute_metatag->getItems();
    if (!empty($items['head_title']) || !empty($items['description'])) {
      $token_types = \Drupal::service('myroute_metatag.helper')
        ->getTokenTypesByRouteName($route_name);
      $data = [];
      foreach ($token_types as $token_type => $parameter_name) {
        $parameter = $route_match->getParameter($parameter_name);
        $data[$token_type] = $parameter;
      }
      if (!empty($items['head_title'])) {
        $items['head_title'] = \Drupal::service('token')
          ->replace($items['head_title'], $data, array('clear' => TRUE));
        $variables['head_title'] = [];
        $variables['head_title']['title'] = Html::decodeEntities($items['head_title']);
      }
      if (!empty($items['description'])) {
        $description_text = \Drupal::service('token')
          ->replace($items['description'], $data, array('clear' => TRUE));
        $description_text = Html::decodeEntities($description_text);
        $description_text = str_replace('"', "'", $description_text);
        $description = [
          '#tag' => 'meta',
          '#attributes' => [
            'name' => 'description',
            'content' => $description_text,
          ],
        ];
        $variables['#attached']['html_head'][] = [$description, 'description'];
      }
    }
  }
}


/**
 * Implements hook_preprocess_block().
 * @param array $variables
 */
function myroute_metatag_preprocess_block(&$variables) {
  /* TitleResolver не всегда вызывается для блока заголовка, поэтому нужно дублировать здесь */
  if ('page_title_block' == $variables['plugin_id']) {
    $route_match = \Drupal::routeMatch();
    $route_name = $route_match->getRouteName();
    if ($route_name && $myroute_metatag_id = \Drupal::service('myroute_metatag.myroute_metatag_evaluator')
        ->evaluateByRouteName($route_name)
    ) {
      $myroute_metatag = MyrouteMetatag::load($myroute_metatag_id);
      $items = $myroute_metatag->getItems();
      if (!empty($items['title_h1'])) {
        $token_types = \Drupal::service('myroute_metatag.helper')
          ->getTokenTypesByRouteName($route_name);
        $data = [];
        foreach ($token_types as $token_type => $parameter_name) {
          $parameter = $route_match->getParameter($parameter_name);
          $data[$token_type] = $parameter;
        }
        $new_title = \Drupal::service('token')
          ->replace($items['title_h1'], $data, array('clear' => TRUE));
        if (!empty($new_title)) {
          $variables['content']['#title'] = $new_title;
        }
      }
    }
  }
}


